#!/bin/bash

PROJECT_HOME=/Users/kzhai/Workspace/DialogSystem/
PROJECT_HOME_SRC=$PROJECT_HOME/src

if [ $# == 8 ]; then
	FEATURE_TEMPLATE=$1
	INPUT_DIRECTORY=$2
	OUTPUT_DIRECTORY=$3

	TRAINING_ITERATIONS=$4
	TOP_N_CANDIDATES=$5
	UNCERTAINTY_FUNCTION=$6

	CRF_REGULARIZER=$7
	CRF_HYPERPARAMETER=$8
elif [ $# == 6 ]; then
	FEATURE_TEMPLATE=$1
	INPUT_DIRECTORY=$2
	OUTPUT_DIRECTORY=$3

	TRAINING_ITERATIONS=$4
	TOP_N_CANDIDATES=$5
	UNCERTAINTY_FUNCTION=$6

	CRF_REGULARIZER=L2
	CRF_HYPERPARAMETER=1
else
    echo "usage: active_learning.sh FEATURE_TEMPLATE INPUT_DIRECTORY OUTPUT_DIRECTORY TRAINING_ITERATIONS TOP_N_CANDIDATES UNCERTAINTY_FUNCTION [CRF_REGULARIZER CRF_HYPERPARAMETER]"
    exit
fi

mkdir $OUTPUT_DIRECTORY

TESTING_DATA=$INPUT_DIRECTORY/test.dat

NUMBER_OF_FEATURES=$(cat $INPUT_DIRECTORY/feature.description | wc -l)

echo 'feature template = ' $FEATURE_TEMPLATE
echo 'input directory = ' $INPUT_DIRECTORY
echo 'output directory = ' $OUTPUT_DIRECTORY

UNLABELED_DATA=$OUTPUT_DIRECTORY/data.unlabel.iter.0
TRAINING_DATA=$OUTPUT_DIRECTORY/data.train.iter.0

cp $INPUT_DIRECTORY/unlabel.dat $UNLABELED_DATA
cp $INPUT_DIRECTORY/train.dat $TRAINING_DATA

TEMP_OUTPUT_FILE=$OUTPUT_DIRECTORY/temp.output.file
TEMP_CONFUSED_FILE=$OUTPUT_DIRECTORY/temp.confuse.file

#TEMP_UNLABELED_FILE=$OUTPUT_DIRECTORY/temp.unlabeled.file
#TEMP_OUTPUT_DIRECTORY=$HOME/temp.$RANDOM
#mkdir $TEMP_OUTPUT_DIRECTORY

#TEMP_CONFIDENT_OUTPUT=$TEMP_OUTPUT_DIRECTORY/data.confident
#TEMP_UNRELIABLE_OUTPUT=$TEMP_OUTPUT_DIRECTORY/data.unreliable

for (( ITERATION_INDEX=1; ITERATION_INDEX<=$TRAINING_ITERATIONS; ITERATION_INDEX++ ))
do
    echo "..."
    
    MODEL_FILE=$OUTPUT_DIRECTORY/model.crf.iter.$ITERATION_INDEX
	crf_learn -a CRF-$CRF_REGULARIZER -c $CRF_HYPERPARAMETER $FEATURE_TEMPLATE $TRAINING_DATA $MODEL_FILE
	
	TEST_OUTPUT=$OUTPUT_DIRECTORY/output.test.iter.$ITERATION_INDEX
	crf_test -m $MODEL_FILE $TESTING_DATA | tr '\t' ' ' > $TEST_OUTPUT
	
	crf_test -n $TOP_N_CANDIDATES -v1 -m $MODEL_FILE $UNLABELED_DATA > $TEMP_OUTPUT_FILE
	
	UNLABELED_DATA=$OUTPUT_DIRECTORY/data.unlabel.iter.$ITERATION_INDEX
	python $PROJECT_HOME_SRC/crf/uncertainty_sampling.py \
		--predicted_file=$TEMP_OUTPUT_FILE \
		--confused_file=$TEMP_CONFUSED_FILE \
		--unlabel_file=$UNLABELED_DATA \
		--uncertainty_function=$UNCERTAINTY_FUNCTION \
		--top_n_candidates=$TOP_N_CANDIDATES

	TEMP_TRAINING_DATA=$TRAINING_DATA
	TRAINING_DATA=$OUTPUT_DIRECTORY/data.train.iter.$ITERATION_INDEX	
	cat $TEMP_CONFUSED_FILE $TEMP_TRAINING_DATA > $TRAINING_DATA
	rm $TEMP_CONFUSED_FILE
done

rm $TEMP_OUTPUT_FILE

#rm $TEMP_UNLABELED_DATA
#rm -rf $TEMP_OUTPUT_DIRECTORY

for (( ITERATION_INDEX=1; ITERATION_INDEX<=$TRAINING_ITERATIONS; ITERATION_INDEX++ ))
do
	TEST_OUTPUT=$OUTPUT_DIRECTORY/output.test.iter.$ITERATION_INDEX
	if [ ! -e $TEST_OUTPUT ]; then
		break
	fi
	
	echo "evaluating on $ITERATION_INDEX"
	#perl $PROJECT_HOME_SRC/crf/conlleval.txt -r < $TEST_OUTPUT
	perl $PROJECT_HOME_SRC/crf/conlleval.txt < $TEST_OUTPUT
done